"""minha alteração

Revision ID: ceb5a0511ed8
Revises: 966f6dccc47b
Create Date: 2025-07-17 22:53:42.196140

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ceb5a0511ed8'
down_revision: Union[str, None] = '966f6dccc47b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notificacao',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('titulo', sa.String(), nullable=False),
    sa.Column('mensagem', sa.Text(), nullable=False),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('lida', sa.Boolean(), nullable=True),
    sa.Column('criado_em', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('certificado',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('produtor_id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(), nullable=False),
    sa.Column('instituicao', sa.String(), nullable=True),
    sa.Column('validade', sa.Date(), nullable=True),
    sa.Column('arquivo', sa.String(), nullable=True),
    sa.Column('criado_em', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['produtor_id'], ['produtor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item_pedido',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pedido_id', sa.Integer(), nullable=True),
    sa.Column('produto_id', sa.Integer(), nullable=True),
    sa.Column('nome_personalizado', sa.String(), nullable=True),
    sa.Column('quantidade', sa.Integer(), nullable=True),
    sa.Column('valor_unitario', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pedido_id'], ['pedido.id'], ),
    sa.ForeignKeyConstraint(['produto_id'], ['produto.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_item_pedido_id'), 'item_pedido', ['id'], unique=False)
    op.add_column('endereco', sa.Column('usuario_id', sa.Integer(), nullable=False))
    op.drop_constraint('endereco_cpf_usuario_fkey', 'endereco', type_='foreignkey')
    op.create_foreign_key(None, 'endereco', 'usuario', ['usuario_id'], ['id'])
    op.drop_column('endereco', 'cpf_usuario')
    op.add_column('forma_pagamento', sa.Column('usuario_id', sa.Integer(), nullable=False))
    op.drop_constraint('forma_pagamento_usuario_cpf_cnpj_fkey', 'forma_pagamento', type_='foreignkey')
    op.create_foreign_key(None, 'forma_pagamento', 'usuario', ['usuario_id'], ['id'])
    op.drop_column('forma_pagamento', 'usuario_cpf_cnpj')
    op.add_column('listagem', sa.Column('produtor_id', sa.Integer(), nullable=False))
    op.drop_constraint('listagem_produtor_cpf_cnpj_fkey', 'listagem', type_='foreignkey')
    op.create_foreign_key(None, 'listagem', 'produtor', ['produtor_id'], ['id'])
    op.drop_column('listagem', 'produtor_cpf_cnpj')
    op.add_column('pedido', sa.Column('usuario_id', sa.Integer(), nullable=True))
    op.drop_constraint('pedido_cpf_usuario_fkey', 'pedido', type_='foreignkey')
    op.create_foreign_key(None, 'pedido', 'usuario', ['usuario_id'], ['id'])
    op.drop_column('pedido', 'cpf_usuario')
    op.add_column('produtor', sa.Column('id', sa.Integer(), autoincrement=True, nullable=False))
    op.add_column('produtor', sa.Column('usuario_id', sa.Integer(), nullable=False))
    op.create_unique_constraint(None, 'produtor', ['usuario_id'])
    op.drop_constraint('produtor_cpf_cnpj_fkey', 'produtor', type_='foreignkey')
    op.create_foreign_key(None, 'produtor', 'usuario', ['usuario_id'], ['id'])
    op.drop_column('produtor', 'cpf_cnpj')
    op.add_column('usuario', sa.Column('id', sa.Integer(), autoincrement=True, nullable=False))
    op.alter_column('usuario', 'cpf_cnpj',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index('ix_usuario_cpf_cnpj', table_name='usuario')
    op.create_index(op.f('ix_usuario_cpf_cnpj'), 'usuario', ['cpf_cnpj'], unique=True)
    op.add_column('usuario_produto_favorito', sa.Column('usuario_id', sa.Integer(), nullable=False))
    op.drop_constraint('usuario_produto_favorito_usuario_cpf_cnpj_fkey', 'usuario_produto_favorito', type_='foreignkey')
    op.create_foreign_key(None, 'usuario_produto_favorito', 'usuario', ['usuario_id'], ['id'])
    op.drop_column('usuario_produto_favorito', 'usuario_cpf_cnpj')
    op.add_column('usuario_produtor_favorito', sa.Column('usuario_id', sa.Integer(), nullable=False))
    op.add_column('usuario_produtor_favorito', sa.Column('produtor_id', sa.Integer(), nullable=False))
    op.drop_constraint('usuario_produtor_favorito_usuario_cpf_cnpj_fkey', 'usuario_produtor_favorito', type_='foreignkey')
    op.drop_constraint('usuario_produtor_favorito_produtor_cpf_cnpj_fkey', 'usuario_produtor_favorito', type_='foreignkey')
    op.create_foreign_key(None, 'usuario_produtor_favorito', 'usuario', ['usuario_id'], ['id'])
    op.create_foreign_key(None, 'usuario_produtor_favorito', 'produtor', ['produtor_id'], ['id'])
    op.drop_column('usuario_produtor_favorito', 'usuario_cpf_cnpj')
    op.drop_column('usuario_produtor_favorito', 'produtor_cpf_cnpj')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('usuario_produtor_favorito', sa.Column('produtor_cpf_cnpj', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('usuario_produtor_favorito', sa.Column('usuario_cpf_cnpj', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'usuario_produtor_favorito', type_='foreignkey')
    op.drop_constraint(None, 'usuario_produtor_favorito', type_='foreignkey')
    op.create_foreign_key('usuario_produtor_favorito_produtor_cpf_cnpj_fkey', 'usuario_produtor_favorito', 'produtor', ['produtor_cpf_cnpj'], ['cpf_cnpj'])
    op.create_foreign_key('usuario_produtor_favorito_usuario_cpf_cnpj_fkey', 'usuario_produtor_favorito', 'usuario', ['usuario_cpf_cnpj'], ['cpf_cnpj'])
    op.drop_column('usuario_produtor_favorito', 'produtor_id')
    op.drop_column('usuario_produtor_favorito', 'usuario_id')
    op.add_column('usuario_produto_favorito', sa.Column('usuario_cpf_cnpj', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'usuario_produto_favorito', type_='foreignkey')
    op.create_foreign_key('usuario_produto_favorito_usuario_cpf_cnpj_fkey', 'usuario_produto_favorito', 'usuario', ['usuario_cpf_cnpj'], ['cpf_cnpj'])
    op.drop_column('usuario_produto_favorito', 'usuario_id')
    op.drop_index(op.f('ix_usuario_cpf_cnpj'), table_name='usuario')
    op.create_index('ix_usuario_cpf_cnpj', 'usuario', ['cpf_cnpj'], unique=False)
    op.alter_column('usuario', 'cpf_cnpj',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('usuario', 'id')
    op.add_column('produtor', sa.Column('cpf_cnpj', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'produtor', type_='foreignkey')
    op.create_foreign_key('produtor_cpf_cnpj_fkey', 'produtor', 'usuario', ['cpf_cnpj'], ['cpf_cnpj'])
    op.drop_constraint(None, 'produtor', type_='unique')
    op.drop_column('produtor', 'usuario_id')
    op.drop_column('produtor', 'id')
    op.add_column('pedido', sa.Column('cpf_usuario', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'pedido', type_='foreignkey')
    op.create_foreign_key('pedido_cpf_usuario_fkey', 'pedido', 'usuario', ['cpf_usuario'], ['cpf_cnpj'])
    op.drop_column('pedido', 'usuario_id')
    op.add_column('listagem', sa.Column('produtor_cpf_cnpj', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'listagem', type_='foreignkey')
    op.create_foreign_key('listagem_produtor_cpf_cnpj_fkey', 'listagem', 'produtor', ['produtor_cpf_cnpj'], ['cpf_cnpj'])
    op.drop_column('listagem', 'produtor_id')
    op.add_column('forma_pagamento', sa.Column('usuario_cpf_cnpj', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'forma_pagamento', type_='foreignkey')
    op.create_foreign_key('forma_pagamento_usuario_cpf_cnpj_fkey', 'forma_pagamento', 'usuario', ['usuario_cpf_cnpj'], ['cpf_cnpj'])
    op.drop_column('forma_pagamento', 'usuario_id')
    op.add_column('endereco', sa.Column('cpf_usuario', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'endereco', type_='foreignkey')
    op.create_foreign_key('endereco_cpf_usuario_fkey', 'endereco', 'usuario', ['cpf_usuario'], ['cpf_cnpj'])
    op.drop_column('endereco', 'usuario_id')
    op.drop_index(op.f('ix_item_pedido_id'), table_name='item_pedido')
    op.drop_table('item_pedido')
    op.drop_table('certificado')
    op.drop_table('notificacao')
    # ### end Alembic commands ###
